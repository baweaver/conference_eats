<%= form_with url: rodauth.create_account_path, method: :post, data: { turbo: false } do |form| %>
  <%# Name %>
  <div class="field">
    <%= form.label :name, 'Name', class: 'label' %>

    <%=
      form.text_field(:name,
        value: params[:name],
        id: 'name',
        required: true,
        class: "input #{'is-invalid' if rodauth.field_error('name')}",
        aria: (
          {
            invalid: true,
            describedby: 'name_error_message'
          } if rodauth.field_error('name')
        )
      )
    %>

    <%=
      content_tag(:span,
        rodauth.field_error('name'),
        class: 'invalid-feedback',
        id: 'name_error_message'
      ) if rodauth.field_error('name')
    %>
  </div>

  <%# Email %>
  <div class="field">
    <%= form.label "email", 'Email', class: "label" %>

    <%=
      form.email_field(rodauth.login_param,
        value: params[rodauth.login_param],
        id: "email",
        autocomplete: "email",
        required: true,
        class: "input #{"is-invalid" if rodauth.field_error(rodauth.login_param)}",
        aria: (
          {
            invalid: true,
            describedby: "email_error_message"
          } if rodauth.field_error(rodauth.login_param)
        )
      )
    %>

    <%=
      content_tag(:span,
        rodauth.field_error(rodauth.login_param),
        class: "invalid-feedback",
        id: "email_error_message"
      ) if rodauth.field_error(rodauth.login_param)
    %>
  </div>

  <% if rodauth.require_login_confirmation? %>
    <div class="field">
      <%= form.label "login-confirm", rodauth.login_confirm_label, class: "label" %>

      <%=
        form.email_field(rodauth.login_confirm_param,
          value: params[rodauth.login_confirm_param],
          id: "login-confirm",
          autocomplete: "email",
          required: true,
          class: "input #{"is-invalid" if rodauth.field_error(rodauth.login_confirm_param)}",
          aria: (
            {
              invalid: true,
              describedby: "login-confirm_error_message"
            } if rodauth.field_error(rodauth.login_confirm_param)
          )
        )
      %>

      <%=
        content_tag(:span,
          rodauth.field_error(rodauth.login_confirm_param),
          class: "invalid-feedback",
          id: "login-confirm_error_message"
        ) if rodauth.field_error(rodauth.login_confirm_param)
      %>
    </div>
  <% end %>

  <% if rodauth.create_account_set_password? %>
    <div class="field">
      <%= form.label "password", rodauth.password_label, class: "label" %>

      <%=
        form.password_field(rodauth.password_param,
          value: "",
          id: "password",
          autocomplete: rodauth.password_field_autocomplete_value,
          required: true,
          class: "input #{"is-invalid" if rodauth.field_error(rodauth.password_param)}",
          aria: (
            {
              invalid: true,
              describedby: "password_error_message"
            } if rodauth.field_error(rodauth.password_param)
          )
        )
      %>

      <%=
        content_tag(:span,
          rodauth.field_error(rodauth.password_param),
          class: "invalid-feedback",
          id: "password_error_message"
        ) if rodauth.field_error(rodauth.password_param)
      %>
    </div>

    <% if rodauth.require_password_confirmation? %>
      <div class="field">
        <%= form.label "password-confirm", rodauth.password_confirm_label, class: "label" %>

        <%=
          form.password_field(rodauth.password_confirm_param,
            value: "",
            id: "password-confirm",
            autocomplete: "new-password",
            required: true,
            class: "input #{"is-invalid" if rodauth.field_error(rodauth.password_confirm_param)}",
            aria: (
              {
                invalid: true,
                describedby: "password-confirm_error_message"
              } if rodauth.field_error(rodauth.password_confirm_param)
            )
          )
        %>

        <%=
          content_tag(:span,
            rodauth.field_error(rodauth.password_confirm_param),
            class: "invalid-feedback",
            id: "password-confirm_error_message"
          ) if rodauth.field_error(rodauth.password_confirm_param)
        %>
      </div>
    <% end %>
  <% end %>

  <div class="field">
    <%= form.submit rodauth.create_account_button, class: "button is-primary" %>
  </div>
<% end %>
